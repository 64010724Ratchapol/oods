class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None
    def getData(self):
        return self.data
    def getNext(self):
        return self.next

class LinkedList :
    def __init__(self):
        self.head = None
        self.tail = None
        self.size = 0
    def __str__(self):
        return str(self.elements)
    def zero(self,data,zero):
        newNode = Node(data)
        cur = self.head
        if newNode==zero:
            self.head==newNode
            self.tail.next=newNode
            
        tail = self.head
        while (tail.next):
            tail = tail.next
        tail.next =  newNode
        return data
    def insert(self,index,data):
        newNode = Node(data)
        cur = self.head
        for i in range(index):
            cur = cur.next
        if self.head == None:
            self.head = newNode
            self.tail = newNode
        elif index == 0:
            newNode.next = cur
            cur.prev = newNode
            self.head = newNode
        elif index == self.size:
            newNode.prev = self.tail
            self.tail.next = newNode
            self.tail = newNode
        elif cur.prev != None:
            newNode.next = cur
            newNode.prev = cur.prev
            cur.prev.next = newNode
            cur.prev = newNode
        
        self.size += 1
    def appendlist(self, new_data):
        new_node = Node(new_data)
        if self.head is None:
            self.head = new_node
            return new_data
        last = self.head
        while (last.next):
            last = last.next
        last.next =  new_node
        return new_data
        self.size += 1
    def __str__(self) :
        st = ''
        cur = self.head
        while cur:
            if cur.next:
                st += cur.data + ' <- '
            else :
                st += cur.data
            cur = cur.next
        return st

    def index(self, item):
        pos = 0
        current = self.head
        found = False
        while current is not None and not found:
            if current.getData() == item:
                found = True
            else:
                current = current.getNext()
                pos += 1
        return pos
l=LinkedList()
s=LinkedList()
p=LinkedList()
u=LinkedList()
r=LinkedList()
print(" *** Locomotive ***")
inp = input("Enter Input : ").split()
c=0
for i in inp:
    l.insert(c,i)
    c+=1
print("Before :",l)
index_zero=l.index('0')
pos=0
for i in inp:
    if pos < index_zero:
        u.appendlist(i)
        pos+=1
        u.size+=1
    elif i=='0':
        s.appendlist(i)
       # s.insert(0,'0')
        s.size+=1
    else:     
        p.appendlist(i)
        p.size+=1
#print(l.index('0'))
if s.size>0:
    r.appendlist(str(s))
if p.size>0:
    r.appendlist(str(p))
if u.size>0:
    r.appendlist(str(u))
print("After :",r)
#print(s.size)
#print(p.size)
#print(u.size)
#print(u)
#print(s)
#print(p)
